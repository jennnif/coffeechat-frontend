{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/and___young/Desktop/kt_pj2/coffeechat-frontend/app/api/users/login/route.ts"],"sourcesContent":["/**\n * User Service 로그인 프록시 API 라우트\n * POST /api/users/login\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\n\nconst USER_SERVICE_URL = process.env.USER_SERVICE_URL || 'http://localhost:8081';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    const response = await fetch(`${USER_SERVICE_URL}/users/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      return NextResponse.json(\n        { error: `User Service Error: ${errorText}` },\n        { status: response.status }\n      );\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('User Service 로그인 연결 오류:', error);\n    return NextResponse.json(\n      { error: 'User Service에 연결할 수 없습니다' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAED;;AAEA,MAAM,mBAAmB,QAAQ,GAAG,CAAC,gBAAgB,IAAI;AAElD,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,WAAW,MAAM,MAAM,GAAG,iBAAiB,YAAY,CAAC,EAAE;YAC9D,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,CAAC,oBAAoB,EAAE,WAAW;YAAC,GAC5C;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}