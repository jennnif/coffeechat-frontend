{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/and___young/Desktop/kt_pj2/coffeechat-frontend/lib/api.ts"],"sourcesContent":["/**\n * 클라이언트는 항상 `/api/*`만 호출하고, 서버(Route Handler)가 백엔드로 프록시한다.\n */\n\nexport async function request<T>(input: string, init?: RequestInit): Promise<T> {\n  const response = await fetch(`/api${input}`, {\n    ...init,\n    headers: {\n      'Content-Type': 'application/json',\n      ...init?.headers,\n    },\n  });\n\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`HTTP ${response.status}: ${errorText}`);\n  }\n\n  return response.json();\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;AAEM,eAAe,QAAW,KAAa,EAAE,IAAkB;IAChE,MAAM,WAAW,MAAM,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE;QAC3C,GAAG,IAAI;QACP,SAAS;YACP,gBAAgB;YAChB,GAAG,MAAM,OAAO;QAClB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,YAAY,MAAM,SAAS,IAAI;QACrC,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,SAAS,MAAM,CAAC,EAAE,EAAE,WAAW;IACzD;IAEA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/and___young/Desktop/kt_pj2/coffeechat-frontend/lib/user-api.ts"],"sourcesContent":["/**\n * User Service API 클라이언트\n */\n\nimport { request } from './api';\nimport type {\n  ApiResponse,\n  UserResponse,\n  UserCreateRequest,\n  UserLoginRequest,\n  NicknameGenerateRequest,\n  NicknameGenerateResponse,\n} from '../types/user';\n\n/**\n * 모든 사용자 조회\n * GET /users\n */\nexport async function getAllUsers(): Promise<ApiResponse<UserResponse[]>> {\n  return request<ApiResponse<UserResponse[]>>('/users');\n}\n\n/**\n * 사용자 등록\n * POST /users\n */\nexport async function createUser(userData: UserCreateRequest): Promise<ApiResponse<UserResponse>> {\n  return request<ApiResponse<UserResponse>>('/users', {\n    method: 'POST',\n    body: JSON.stringify(userData),\n  });\n}\n\n/**\n * 특정 사용자 조회\n * GET /users/{userId}\n */\nexport async function getUser(userId: string): Promise<ApiResponse<UserResponse>> {\n  return request<ApiResponse<UserResponse>>(`/users/${encodeURIComponent(userId)}`);\n}\n\n/**\n * 사용자 삭제\n * DELETE /users/{userId}\n */\nexport async function deleteUser(userId: string): Promise<ApiResponse<void>> {\n  return request<ApiResponse<void>>(`/users/${encodeURIComponent(userId)}`, {\n    method: 'DELETE',\n  });\n}\n\n/**\n * 로그인\n * POST /users/login\n */\nexport async function login(loginData: UserLoginRequest): Promise<ApiResponse<UserResponse>> {\n  return request<ApiResponse<UserResponse>>('/users/login', {\n    method: 'POST',\n    body: JSON.stringify(loginData),\n  });\n}\n\n/**\n * 로그아웃\n * POST /users/logout\n */\nexport async function logout(userId: string): Promise<ApiResponse<void>> {\n  return request<ApiResponse<void>>(`/users/logout?userId=${encodeURIComponent(userId)}`, {\n    method: 'POST',\n  });\n}\n\n/**\n * 닉네임 생성\n * POST /users/nickname/generate\n */\nexport async function generateNickname(\n  requestData: NicknameGenerateRequest\n): Promise<ApiResponse<NicknameGenerateResponse>> {\n  return request<ApiResponse<NicknameGenerateResponse>>('/users/nickname/generate', {\n    method: 'POST',\n    body: JSON.stringify(requestData),\n  });\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;;;;;;;AAED;;AAcO,eAAe;IACpB,OAAO,IAAA,qHAAO,EAA8B;AAC9C;AAMO,eAAe,WAAW,QAA2B;IAC1D,OAAO,IAAA,qHAAO,EAA4B,UAAU;QAClD,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAMO,eAAe,QAAQ,MAAc;IAC1C,OAAO,IAAA,qHAAO,EAA4B,CAAC,OAAO,EAAE,mBAAmB,SAAS;AAClF;AAMO,eAAe,WAAW,MAAc;IAC7C,OAAO,IAAA,qHAAO,EAAoB,CAAC,OAAO,EAAE,mBAAmB,SAAS,EAAE;QACxE,QAAQ;IACV;AACF;AAMO,eAAe,MAAM,SAA2B;IACrD,OAAO,IAAA,qHAAO,EAA4B,gBAAgB;QACxD,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAMO,eAAe,OAAO,MAAc;IACzC,OAAO,IAAA,qHAAO,EAAoB,CAAC,qBAAqB,EAAE,mBAAmB,SAAS,EAAE;QACtF,QAAQ;IACV;AACF;AAMO,eAAe,iBACpB,WAAoC;IAEpC,OAAO,IAAA,qHAAO,EAAwC,4BAA4B;QAChF,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/and___young/Desktop/kt_pj2/coffeechat-frontend/lib/location-api.ts"],"sourcesContent":["/**\n * Location Service API 클라이언트\n */\n\nimport { request } from './api';\nimport type { LocationResponse, LocationRequest } from '../types/location';\n\n/**\n * 모든 위치 조회\n * GET /locations\n */\nexport async function getAllLocations(): Promise<LocationResponse[]> {\n  return request<LocationResponse[]>('/locations');\n}\n\n/**\n * 특정 위치 조회\n * GET /locations/{locationId}\n */\nexport async function getLocationById(locationId: string): Promise<LocationResponse> {\n  return request<LocationResponse>(`/locations/${encodeURIComponent(locationId)}`);\n}\n\n/**\n * 위치 생성\n * POST /locations\n */\nexport async function createLocation(locationData: LocationRequest): Promise<LocationResponse> {\n  return request<LocationResponse>('/locations', {\n    method: 'POST',\n    body: JSON.stringify(locationData),\n  });\n}\n\n/**\n * 위치 삭제\n * DELETE /locations/{locationId}\n */\nexport async function deleteLocation(locationId: string): Promise<void> {\n  return request<void>(`/locations/${encodeURIComponent(locationId)}`, {\n    method: 'DELETE',\n  });\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;AAED;;AAOO,eAAe;IACpB,OAAO,IAAA,qHAAO,EAAqB;AACrC;AAMO,eAAe,gBAAgB,UAAkB;IACtD,OAAO,IAAA,qHAAO,EAAmB,CAAC,WAAW,EAAE,mBAAmB,aAAa;AACjF;AAMO,eAAe,eAAe,YAA6B;IAChE,OAAO,IAAA,qHAAO,EAAmB,cAAc;QAC7C,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAMO,eAAe,eAAe,UAAkB;IACrD,OAAO,IAAA,qHAAO,EAAO,CAAC,WAAW,EAAE,mBAAmB,aAAa,EAAE;QACnE,QAAQ;IACV;AACF","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/and___young/Desktop/kt_pj2/coffeechat-frontend/app/test/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { getAllUsers, createUser, getUser, login, deleteUser } from '../../lib/user-api';\nimport { getAllLocations, getLocationById, createLocation, deleteLocation } from '../../lib/location-api';\nimport type { UserCreateRequest, UserLoginRequest, UserResponse } from '../../types/user';\nimport type { LocationRequest, LocationResponse } from '../../types/location';\n\nexport default function TestPage() {\n  const [result, setResult] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchUserId, setSearchUserId] = useState('test@kt.com');\n  const [createForm, setCreateForm] = useState<UserCreateRequest>({\n    userId: 'test@kt.com',\n    username: '테스트사용자',\n    nickname: '테스터',\n    password: 'password123'\n  });\n  const [locationForm, setLocationForm] = useState<LocationRequest>({\n    locationId: 'loc001',\n    building: '광화문',\n    floor: '1'\n  });\n  const [searchLocationId, setSearchLocationId] = useState('loc001');\n\n  const handleTest = async (testFunction: () => Promise<any>, testName: string) => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      console.log(`${testName} 테스트 시작...`);\n      const data = await testFunction();\n      setResult(data);\n      console.log(`${testName} 성공:`, data);\n    } catch (err) {\n      console.error(`${testName} 실패:`, err);\n      setError(err instanceof Error ? err.message : '알 수 없는 오류');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 테스트 함수들\n  const testGetAllUsers = () => handleTest(\n    () => getAllUsers(),\n    '모든 사용자 조회'\n  );\n\n  const testCreateUser = () => {\n    return handleTest(\n      () => createUser(createForm),\n      `사용자 생성 (${createForm.userId})`\n    );\n  };\n\n  const testGetUser = () => handleTest(\n    () => getUser(searchUserId),\n    `특정 사용자 조회 (${searchUserId})`\n  );\n\n  const testLogin = () => {\n    const loginData: UserLoginRequest = {\n      userId: createForm.userId,\n      password: createForm.password\n    };\n    return handleTest(\n      () => login(loginData),\n      `로그인 (${createForm.userId})`\n    );\n  };\n\n  const testDeleteUser = () => handleTest(\n    () => deleteUser(searchUserId),\n    `사용자 삭제 (${searchUserId})`\n  );\n\n  // Location Service 테스트 함수들\n  const testGetAllLocations = () => handleTest(\n    () => getAllLocations(),\n    '모든 위치 조회'\n  );\n\n  const testCreateLocation = () => {\n    return handleTest(\n      () => createLocation(locationForm),\n      `위치 생성 (${locationForm.locationId})`\n    );\n  };\n\n  const testGetLocation = () => handleTest(\n    () => getLocationById(searchLocationId),\n    `특정 위치 조회 (${searchLocationId})`\n  );\n\n  const testDeleteLocation = () => handleTest(\n    () => deleteLocation(searchLocationId),\n    `위치 삭제 (${searchLocationId})`\n  );\n\n  // 테스트 데이터 일괄 생성\n  const testData = [\n    { locationId: 'loc002', building: '광화문', floor: '2' },\n    { locationId: 'loc003', building: '광화문', floor: '3' },\n    { locationId: 'loc004', building: '광화문', floor: '4' },\n    { locationId: 'loc101', building: '판교', floor: '1' },\n    { locationId: 'loc102', building: '판교', floor: '2' },\n    { locationId: 'loc103', building: '판교', floor: '3' },\n    { locationId: 'loc104', building: '판교', floor: '4' },\n    { locationId: 'loc105', building: '판교', floor: '5' },\n    { locationId: 'loc106', building: '판교', floor: '6' },\n    { locationId: 'loc107', building: '판교', floor: '7' },\n    { locationId: 'loc108', building: '판교', floor: '8' },\n    { locationId: 'loc201', building: '송파', floor: '1' },\n    { locationId: 'loc202', building: '송파', floor: '2' },\n    { locationId: 'loc310', building: '우면', floor: '10' },\n    { locationId: 'loc311', building: '우면', floor: '11' }\n  ];\n\n  const testCreateAllLocations = async () => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      console.log('모든 테스트 위치 데이터 생성 시작...');\n      const results = [];\n      \n      for (const locationData of testData) {\n        try {\n          const result = await createLocation(locationData);\n          results.push({ success: true, data: result });\n          console.log(`위치 생성 성공: ${locationData.locationId}`);\n        } catch (err) {\n          results.push({ \n            success: false, \n            locationId: locationData.locationId, \n            error: err instanceof Error ? err.message : '알 수 없는 오류' \n          });\n          console.error(`위치 생성 실패: ${locationData.locationId}`, err);\n        }\n      }\n      \n      setResult({\n        message: '테스트 데이터 생성 완료',\n        total: testData.length,\n        success: results.filter(r => r.success).length,\n        failed: results.filter(r => !r.success).length,\n        results\n      });\n    } catch (err) {\n      console.error('테스트 데이터 생성 실패:', err);\n      setError(err instanceof Error ? err.message : '알 수 없는 오류');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-center text-gray-800 mb-8\">\n          KT Coffee Chat 서비스 테스트\n        </h1>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4 text-blue-800\">👤 User Service 테스트</h2>\n          \n          {/* 사용자 생성 폼 */}\n          <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-gray-800 mb-3\">사용자 생성 정보</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"createUserId\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  사용자 ID (KT 이메일):\n                </label>\n                <input\n                  id=\"createUserId\"\n                  type=\"email\"\n                  placeholder=\"user@kt.com\"\n                  value={createForm.userId}\n                  onChange={(e) => setCreateForm({...createForm, userId: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"createUsername\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  사용자명:\n                </label>\n                <input\n                  id=\"createUsername\"\n                  type=\"text\"\n                  placeholder=\"홍길동\"\n                  value={createForm.username}\n                  onChange={(e) => setCreateForm({...createForm, username: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"createNickname\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  닉네임:\n                </label>\n                <input\n                  id=\"createNickname\"\n                  type=\"text\"\n                  placeholder=\"커피러버\"\n                  value={createForm.nickname}\n                  onChange={(e) => setCreateForm({...createForm, nickname: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"createPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  비밀번호 (8자 이상):\n                </label>\n                <input\n                  id=\"createPassword\"\n                  type=\"password\"\n                  placeholder=\"password123\"\n                  value={createForm.password}\n                  onChange={(e) => setCreateForm({...createForm, password: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* 사용자 ID 입력 필드 */}\n          <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n            <label htmlFor=\"searchUserId\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              조회/삭제할 사용자 ID:\n            </label>\n            <input\n              id=\"searchUserId\"\n              type=\"email\"\n              placeholder=\"user@kt.com\"\n              value={searchUserId}\n              onChange={(e) => setSearchUserId(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n            <button\n              onClick={testGetAllUsers}\n              disabled={loading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\"\n            >\n              모든 사용자 조회\n            </button>\n            \n            <button\n              onClick={testCreateUser}\n              disabled={loading || !createForm.userId.trim() || !createForm.username.trim() || !createForm.nickname.trim() || !createForm.password.trim() || createForm.password.length < 8}\n              className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50\"\n            >\n              사용자 생성\n            </button>\n            \n            <button\n              onClick={testGetUser}\n              disabled={loading || !searchUserId.trim()}\n              className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 disabled:opacity-50\"\n            >\n              특정 사용자 조회\n            </button>\n            \n            <button\n              onClick={testLogin}\n              disabled={loading}\n              className=\"px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700 disabled:opacity-50\"\n            >\n              로그인 테스트\n            </button>\n            \n            <button\n              onClick={testDeleteUser}\n              disabled={loading || !searchUserId.trim()}\n              className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50\"\n            >\n              사용자 삭제\n            </button>\n          </div>\n\n          {loading && (\n            <div className=\"text-center py-4\">\n              <div className=\"text-blue-600\">테스트 진행 중...</div>\n            </div>\n          )}\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded p-4 mb-4\">\n              <h3 className=\"font-semibold text-red-800 mb-2\">오류 발생:</h3>\n              <pre className=\"text-red-600 text-sm whitespace-pre-wrap\">{error}</pre>\n            </div>\n          )}\n\n          {result && (\n            <div className=\"bg-green-50 border border-green-200 rounded p-4\">\n              <h3 className=\"font-semibold text-green-800 mb-2\">결과:</h3>\n              <pre className=\"text-green-700 text-sm whitespace-pre-wrap overflow-auto\">\n                {JSON.stringify(result, null, 2)}\n              </pre>\n            </div>\n          )}\n        </div>\n\n        {/* Location Service 테스트 */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4 text-green-800\">📍 Location Service 테스트</h2>\n          \n          {/* 위치 생성 폼 */}\n          <div className=\"mb-6 p-4 bg-green-50 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-gray-800 mb-3\">위치 생성 정보</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <label htmlFor=\"createLocationId\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  위치 ID:\n                </label>\n                <input\n                  id=\"createLocationId\"\n                  type=\"text\"\n                  placeholder=\"loc001\"\n                  value={locationForm.locationId}\n                  onChange={(e) => setLocationForm({...locationForm, locationId: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"createBuilding\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  건물명:\n                </label>\n                <input\n                  id=\"createBuilding\"\n                  type=\"text\"\n                  placeholder=\"광화문\"\n                  value={locationForm.building}\n                  onChange={(e) => setLocationForm({...locationForm, building: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"createFloor\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  층:\n                </label>\n                <input\n                  id=\"createFloor\"\n                  type=\"text\"\n                  placeholder=\"1\"\n                  value={locationForm.floor}\n                  onChange={(e) => setLocationForm({...locationForm, floor: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* 위치 ID 입력 필드 */}\n          <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n            <label htmlFor=\"searchLocationId\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              조회/삭제할 위치 ID:\n            </label>\n            <input\n              id=\"searchLocationId\"\n              type=\"text\"\n              placeholder=\"loc001\"\n              value={searchLocationId}\n              onChange={(e) => setSearchLocationId(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n            />\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 mb-6\">\n            <button\n              onClick={testGetAllLocations}\n              disabled={loading}\n              className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50\"\n            >\n              모든 위치 조회\n            </button>\n            \n            <button\n              onClick={testCreateLocation}\n              disabled={loading || !locationForm.locationId.trim() || !locationForm.building.trim() || !locationForm.floor.trim()}\n              className=\"px-4 py-2 bg-emerald-600 text-white rounded hover:bg-emerald-700 disabled:opacity-50\"\n            >\n              위치 생성\n            </button>\n            \n            <button\n              onClick={testGetLocation}\n              disabled={loading || !searchLocationId.trim()}\n              className=\"px-4 py-2 bg-teal-600 text-white rounded hover:bg-teal-700 disabled:opacity-50\"\n            >\n              특정 위치 조회\n            </button>\n            \n            <button\n              onClick={testDeleteLocation}\n              disabled={loading || !searchLocationId.trim()}\n              className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50\"\n            >\n              위치 삭제\n            </button>\n            \n            <button\n              onClick={testCreateAllLocations}\n              disabled={loading}\n              className=\"px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 disabled:opacity-50\"\n            >\n              테스트 데이터 일괄 생성\n            </button>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">환경 정보</h2>\n          <div className=\"text-sm text-gray-600\">\n            <p><strong>프론트엔드:</strong> http://localhost:3000</p>\n            <p><strong>User Service:</strong> Azure 배포</p>\n            <p><strong>Location Service:</strong> Azure 배포</p>\n            <p><strong>API 프록시:</strong> /api/users/*, /api/locations/*</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAM;IAC1C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAoB;QAC9D,QAAQ;QACR,UAAU;QACV,UAAU;QACV,UAAU;IACZ;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAkB;QAChE,YAAY;QACZ,UAAU;QACV,OAAO;IACT;IACA,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IAEzD,MAAM,aAAa,OAAO,cAAkC;QAC1D,WAAW;QACX,SAAS;QACT,UAAU;QAEV,IAAI;YACF,QAAQ,GAAG,CAAC,GAAG,SAAS,UAAU,CAAC;YACnC,MAAM,OAAO,MAAM;YACnB,UAAU;YACV,QAAQ,GAAG,CAAC,GAAG,SAAS,IAAI,CAAC,EAAE;QACjC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,GAAG,SAAS,IAAI,CAAC,EAAE;YACjC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,UAAU;IACV,MAAM,kBAAkB,IAAM,WAC5B,IAAM,IAAA,iIAAW,KACjB;IAGF,MAAM,iBAAiB;QACrB,OAAO,WACL,IAAM,IAAA,gIAAU,EAAC,aACjB,CAAC,QAAQ,EAAE,WAAW,MAAM,CAAC,CAAC,CAAC;IAEnC;IAEA,MAAM,cAAc,IAAM,WACxB,IAAM,IAAA,6HAAO,EAAC,eACd,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IAG/B,MAAM,YAAY;QAChB,MAAM,YAA8B;YAClC,QAAQ,WAAW,MAAM;YACzB,UAAU,WAAW,QAAQ;QAC/B;QACA,OAAO,WACL,IAAM,IAAA,2HAAK,EAAC,YACZ,CAAC,KAAK,EAAE,WAAW,MAAM,CAAC,CAAC,CAAC;IAEhC;IAEA,MAAM,iBAAiB,IAAM,WAC3B,IAAM,IAAA,gIAAU,EAAC,eACjB,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;IAG5B,2BAA2B;IAC3B,MAAM,sBAAsB,IAAM,WAChC,IAAM,IAAA,yIAAe,KACrB;IAGF,MAAM,qBAAqB;QACzB,OAAO,WACL,IAAM,IAAA,wIAAc,EAAC,eACrB,CAAC,OAAO,EAAE,aAAa,UAAU,CAAC,CAAC,CAAC;IAExC;IAEA,MAAM,kBAAkB,IAAM,WAC5B,IAAM,IAAA,yIAAe,EAAC,mBACtB,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;IAGlC,MAAM,qBAAqB,IAAM,WAC/B,IAAM,IAAA,wIAAc,EAAC,mBACrB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IAG/B,gBAAgB;IAChB,MAAM,WAAW;QACf;YAAE,YAAY;YAAU,UAAU;YAAO,OAAO;QAAI;QACpD;YAAE,YAAY;YAAU,UAAU;YAAO,OAAO;QAAI;QACpD;YAAE,YAAY;YAAU,UAAU;YAAO,OAAO;QAAI;QACpD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAI;QACnD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAK;QACpD;YAAE,YAAY;YAAU,UAAU;YAAM,OAAO;QAAK;KACrD;IAED,MAAM,yBAAyB;QAC7B,WAAW;QACX,SAAS;QACT,UAAU;QAEV,IAAI;YACF,QAAQ,GAAG,CAAC;YACZ,MAAM,UAAU,EAAE;YAElB,KAAK,MAAM,gBAAgB,SAAU;gBACnC,IAAI;oBACF,MAAM,SAAS,MAAM,IAAA,wIAAc,EAAC;oBACpC,QAAQ,IAAI,CAAC;wBAAE,SAAS;wBAAM,MAAM;oBAAO;oBAC3C,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,aAAa,UAAU,EAAE;gBACpD,EAAE,OAAO,KAAK;oBACZ,QAAQ,IAAI,CAAC;wBACX,SAAS;wBACT,YAAY,aAAa,UAAU;wBACnC,OAAO,eAAe,QAAQ,IAAI,OAAO,GAAG;oBAC9C;oBACA,QAAQ,KAAK,CAAC,CAAC,UAAU,EAAE,aAAa,UAAU,EAAE,EAAE;gBACxD;YACF;YAEA,UAAU;gBACR,SAAS;gBACT,OAAO,SAAS,MAAM;gBACtB,SAAS,QAAQ,MAAM,CAAC,CAAA,IAAK,EAAE,OAAO,EAAE,MAAM;gBAC9C,QAAQ,QAAQ,MAAM,CAAC,CAAA,IAAK,CAAC,EAAE,OAAO,EAAE,MAAM;gBAC9C;YACF;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,kBAAkB;YAChC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoD;;;;;;8BAIlE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA2C;;;;;;sCAGzD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAyC;;;;;;8CACvD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAM,SAAQ;oDAAe,WAAU;8DAA+C;;;;;;8DAGvF,8OAAC;oDACC,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,WAAW,MAAM;oDACxB,UAAU,CAAC,IAAM,cAAc;4DAAC,GAAG,UAAU;4DAAE,QAAQ,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACrE,WAAU;;;;;;;;;;;;sDAGd,8OAAC;;8DACC,8OAAC;oDAAM,SAAQ;oDAAiB,WAAU;8DAA+C;;;;;;8DAGzF,8OAAC;oDACC,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,WAAW,QAAQ;oDAC1B,UAAU,CAAC,IAAM,cAAc;4DAAC,GAAG,UAAU;4DAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACvE,WAAU;;;;;;;;;;;;sDAGd,8OAAC;;8DACC,8OAAC;oDAAM,SAAQ;oDAAiB,WAAU;8DAA+C;;;;;;8DAGzF,8OAAC;oDACC,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,WAAW,QAAQ;oDAC1B,UAAU,CAAC,IAAM,cAAc;4DAAC,GAAG,UAAU;4DAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACvE,WAAU;;;;;;;;;;;;sDAGd,8OAAC;;8DACC,8OAAC;oDAAM,SAAQ;oDAAiB,WAAU;8DAA+C;;;;;;8DAGzF,8OAAC;oDACC,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,WAAW,QAAQ;oDAC1B,UAAU,CAAC,IAAM,cAAc;4DAAC,GAAG,UAAU;4DAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACvE,WAAU;;;;;;;;;;;;;;;;;;;;;;;;sCAOlB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,SAAQ;oCAAe,WAAU;8CAA+C;;;;;;8CAGvF,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;oCAC/C,WAAU;;;;;;;;;;;;sCAId,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS;oCACT,UAAU;oCACV,WAAU;8CACX;;;;;;8CAID,8OAAC;oCACC,SAAS;oCACT,UAAU,WAAW,CAAC,WAAW,MAAM,CAAC,IAAI,MAAM,CAAC,WAAW,QAAQ,CAAC,IAAI,MAAM,CAAC,WAAW,QAAQ,CAAC,IAAI,MAAM,CAAC,WAAW,QAAQ,CAAC,IAAI,MAAM,WAAW,QAAQ,CAAC,MAAM,GAAG;oCAC5K,WAAU;8CACX;;;;;;8CAID,8OAAC;oCACC,SAAS;oCACT,UAAU,WAAW,CAAC,aAAa,IAAI;oCACvC,WAAU;8CACX;;;;;;8CAID,8OAAC;oCACC,SAAS;oCACT,UAAU;oCACV,WAAU;8CACX;;;;;;8CAID,8OAAC;oCACC,SAAS;oCACT,UAAU,WAAW,CAAC,aAAa,IAAI;oCACvC,WAAU;8CACX;;;;;;;;;;;;wBAKF,yBACC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CAAgB;;;;;;;;;;;wBAIlC,uBACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAkC;;;;;;8CAChD,8OAAC;oCAAI,WAAU;8CAA4C;;;;;;;;;;;;wBAI9D,wBACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAoC;;;;;;8CAClD,8OAAC;oCAAI,WAAU;8CACZ,KAAK,SAAS,CAAC,QAAQ,MAAM;;;;;;;;;;;;;;;;;;8BAOtC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA4C;;;;;;sCAG1D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAyC;;;;;;8CACvD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAM,SAAQ;oDAAmB,WAAU;8DAA+C;;;;;;8DAG3F,8OAAC;oDACC,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,aAAa,UAAU;oDAC9B,UAAU,CAAC,IAAM,gBAAgB;4DAAC,GAAG,YAAY;4DAAE,YAAY,EAAE,MAAM,CAAC,KAAK;wDAAA;oDAC7E,WAAU;;;;;;;;;;;;sDAGd,8OAAC;;8DACC,8OAAC;oDAAM,SAAQ;oDAAiB,WAAU;8DAA+C;;;;;;8DAGzF,8OAAC;oDACC,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,aAAa,QAAQ;oDAC5B,UAAU,CAAC,IAAM,gBAAgB;4DAAC,GAAG,YAAY;4DAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wDAAA;oDAC3E,WAAU;;;;;;;;;;;;sDAGd,8OAAC;;8DACC,8OAAC;oDAAM,SAAQ;oDAAc,WAAU;8DAA+C;;;;;;8DAGtF,8OAAC;oDACC,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,aAAa,KAAK;oDACzB,UAAU,CAAC,IAAM,gBAAgB;4DAAC,GAAG,YAAY;4DAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACxE,WAAU;;;;;;;;;;;;;;;;;;;;;;;;sCAOlB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,SAAQ;oCAAmB,WAAU;8CAA+C;;;;;;8CAG3F,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,oBAAoB,EAAE,MAAM,CAAC,KAAK;oCACnD,WAAU;;;;;;;;;;;;sCAId,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS;oCACT,UAAU;oCACV,WAAU;8CACX;;;;;;8CAID,8OAAC;oCACC,SAAS;oCACT,UAAU,WAAW,CAAC,aAAa,UAAU,CAAC,IAAI,MAAM,CAAC,aAAa,QAAQ,CAAC,IAAI,MAAM,CAAC,aAAa,KAAK,CAAC,IAAI;oCACjH,WAAU;8CACX;;;;;;8CAID,8OAAC;oCACC,SAAS;oCACT,UAAU,WAAW,CAAC,iBAAiB,IAAI;oCAC3C,WAAU;8CACX;;;;;;8CAID,8OAAC;oCACC,SAAS;oCACT,UAAU,WAAW,CAAC,iBAAiB,IAAI;oCAC3C,WAAU;8CACX;;;;;;8CAID,8OAAC;oCACC,SAAS;oCACT,UAAU;oCACV,WAAU;8CACX;;;;;;;;;;;;;;;;;;8BAML,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAC3C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDAAE,8OAAC;sDAAO;;;;;;wCAAe;;;;;;;8CAC1B,8OAAC;;sDAAE,8OAAC;sDAAO;;;;;;wCAAsB;;;;;;;8CACjC,8OAAC;;sDAAE,8OAAC;sDAAO;;;;;;wCAA0B;;;;;;;8CACrC,8OAAC;;sDAAE,8OAAC;sDAAO;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxC","debugId":null}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":["file:///Users/and___young/Desktop/kt_pj2/coffeechat-frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}